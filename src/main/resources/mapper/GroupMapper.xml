<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.learn.dao.GroupMapper">
  <resultMap id="BaseResultMap" type="com.example.learn.domain.Group">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="managers" jdbcType="OTHER" property="managers" />
    <result column="members" jdbcType="OTHER" property="members" />
    <result column="person_num" jdbcType="INTEGER" property="personNum" />
  </resultMap>
  <sql id="Base_Column_List">
    id, status, code, nickname, avatar_url, create_time, owner_id, managers, members, 
    person_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from group
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from group
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.learn.domain.Group">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into group (status, code, nickname, 
      avatar_url, create_time, owner_id, 
      managers, members, person_num
      )
    values (#{status,jdbcType=TINYINT}, #{code,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, #{ownerId,jdbcType=VARCHAR}, 
      #{managers,jdbcType=OTHER}, #{members,jdbcType=OTHER}, #{personNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.learn.domain.Group">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="status != null">
        status,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="managers != null">
        managers,
      </if>
      <if test="members != null">
        members,
      </if>
      <if test="personNum != null">
        person_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="managers != null">
        #{managers,jdbcType=OTHER},
      </if>
      <if test="members != null">
        #{members,jdbcType=OTHER},
      </if>
      <if test="personNum != null">
        #{personNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.learn.domain.Group">
    update group
    <set>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="managers != null">
        managers = #{managers,jdbcType=OTHER},
      </if>
      <if test="members != null">
        members = #{members,jdbcType=OTHER},
      </if>
      <if test="personNum != null">
        person_num = #{personNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.learn.domain.Group">
    update group
    set status = #{status,jdbcType=TINYINT},
      code = #{code,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      managers = #{managers,jdbcType=OTHER},
      members = #{members,jdbcType=OTHER},
      person_num = #{personNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>